% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbi.R
\docType{methods}
\name{AzureKusto}
\alias{AzureKusto}
\alias{dbConnect,AzureKustoDriver-method}
\alias{AzureKusto-connection}
\alias{dbCanConnect,AzureKustoDriver-method}
\title{Connect to a Kusto cluster}
\usage{
AzureKusto()

\S4method{dbConnect}{AzureKustoDriver}(drv, ...)

\S4method{dbCanConnect}{AzureKustoDriver}(drv, ...)
}
\arguments{
\item{drv}{An AzureKusto DBI driver object, instantiated with \code{AzureKusto()}.}

\item{...}{Authentication arguments supplied to \code{kusto_database_endpoint}.}
}
\value{
\code{dbConnect} returns an object of class AzureKustoConnection. This is simply a wrapper for a Kusto database endpoint, generated with \code{kusto_database_endpoint(...)}. The endpoint itself can be accessed via the \code{@endpoint} slot.

\code{dbCanConnect} returns TRUE if authenticating with the Kusto server succeeded with the given arguments, and FALSE otherwise.
}
\description{
Connect to a Kusto cluster
}
\examples{
\dontrun{
db <- DBI::dbConnect(AzureKusto(),
    server="https://mycluster.location.kusto.windows.net", database="database", tenantid="contoso")

DBI::dbListTables(db)

# no authentication credentials: returns FALSE
DBI::dbCanConnect(AzureKusto(),
    server="https://mycluster.location.kusto.windows.net")

}
}
\seealso{
\link{dbReadTable}, \link{dbWriteTable}, \link{dbGetQuery}, \link{dbSendStatement}, \link{kusto_database_endpoint}
}
